

# This file was *autogenerated* from the file RSA.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_857504083339712752489993810777 = Integer(857504083339712752489993810777); _sage_const_1029224947942998075080348647219 = Integer(1029224947942998075080348647219); _sage_const_65537 = Integer(65537); _sage_const_77578995801157823671636298847186723593814843845525223303932 = Integer(77578995801157823671636298847186723593814843845525223303932)
def euler_totient(p: int, q: int) -> int:
    return (p-_sage_const_1 )*(q-_sage_const_1 )

def RSA(m: int, e: int, n: int) -> int:
    ring = Integers(n)
    c = ring(m)**e
    return c

p = _sage_const_857504083339712752489993810777 
q = _sage_const_1029224947942998075080348647219 
e = _sage_const_65537 
phi = euler_totient(p=p, q=q)

d = pow(e, -_sage_const_1 , phi)

c = _sage_const_77578995801157823671636298847186723593814843845525223303932 
n = p*q
m = RSA(c, d, n)
print(f'm = {m}')

